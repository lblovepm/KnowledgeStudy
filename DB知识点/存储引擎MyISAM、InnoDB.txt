MyISAM与InnoDB的区别:
	1、 存储结构
		MyISAM：创建的表结构存储成3个文件,文件名与表名相同,扩展名分别为：frm,MYD,MYI.
					frm文件：存储表的结构.
					myd文件：存储数据.
					myi文件：存储存储索引.
		InnoDB：创建的表结构存储成2个文件,文件名与表名相同,扩展名分别为：frm,idb
				frm文件：存储表的结构.
				idb文件：存储数据和索引.
				InnoDB表的大小只受限于操作系统文件的大小,一般为2GB.

	2、 存储空间
		MyISAM：可被压缩,存储空间较小.支持三种不同的存储格式：静态表(默认,但是注意数据末尾不能有空格,会被去掉)、动态表、压缩表.
		InnoDB：需要更多的内存和存储,它会在主内存中建立其专用的缓冲池用于高速缓冲数据和索引.

	3、 可移植性、备份及恢复
		MyISAM：数据是以文件的形式存储,所以在跨平台的数据转移中会很方便.在备份和恢复时可单独针对某个表进行操作.
		InnoDB：免费的方案可以是拷贝数据文件、备份 binlog,或者用 mysqldump,在数据量达到几十G的时候就相对痛苦了.

	4、 事务支持
		MyISAM：强调的是性能,每次查询具有原子性,其执行速度比InnoDB类型更快,但是不提供事务支持.
		InnoDB：提供事务支持事务,外部键等高级数据库功能. 
				具有事务(commit)、回滚(rollback)和崩溃修复能力(crash recovery capabilities)的事务安全(transaction-safe (ACID compliant))型表.

	5、 AUTO_INCREMENT
		MyISAM：可以和其他字段一起建立联合索引.引擎的自动增长列必须是索引,如果是组合索引,自动增长可以不是第一列,他可以根据前面几列进行排序后递增.
		InnoDB：InnoDB中必须包含只有该字段的索引.引擎的自动增长列必须是索引,如果是组合索引也必须是组合索引的第一列.

	6、 表锁差异
		MyISAM：只支持表级锁,表级锁有两种模式：表共享锁(Table Read Lock)和表独占写锁(Table Write Lock)
				----->	注意: MyISAM会给select、insert、update、delete自动加锁
				对MyISAM的读操作,不会阻塞其他用户对同一表的读请求,但会阻塞对同一表的写请求；
				对MyISAM的写操作,则会阻塞其他用户对同一表的读和写请求.
		InnoDB：InnoDB默认行级锁.行级锁都是基于索引的,但是也可以将行级锁转化为表级锁
				行级锁变为表级锁情况如下：
				1、如果一条update、delete的SQL语句用不到索引是不会使用行级锁的,会使用表级锁把整张表锁住.
				2、表字段进行变更.
				----->	注意: InnoDB会给insert、update、delete自动加锁,select不会自动加锁,但是可以使用意向锁给select加锁

	7、 全文索引
		MyISAM：支持 FULLTEXT类型的全文索引
		InnoDB：不支持FULLTEXT类型的全文索引,但是innodb可以使用sphinx插件支持全文索引,并且效果更好.

	8、 表主键
		MyISAM：允许没有任何索引和主键的表存在,索引都是保存行的地址.
		InnoDB：如果没有设定主键或者非空唯一索引,就会自动生成一个6字节的主键(用户不可见),数据是主索引的一部分,附加索引保存的是主索引的值.

	9、 表的具体行数
		MyISAM：保存有表的总行数,如果select count(*) from table;会直接取出出该值.
		InnoDB：没有保存表的总行数,如果使用select count(*) from table；就会遍历整个表,消耗相当大,但是在加了where条件后,myisam和innodb处理的方式都一样.

	10、CURD操作
		MyISAM：如果执行大量的SELECT,MyISAM是更好的选择.
		InnoDB：如果你的数据执行大量的INSERT或UPDATE,出于性能方面的考虑,应该使用InnoDB表.
				DELETE从性能上InnoDB更优,但DELETE FROM table时,InnoDB不会重新建立表,而是一行一行的删除,
					在innodb上如果要清空保存有大量数据的表,最好使用truncate table这个命令.

	11、 外键
		MyISAM：不支持
		InnoDB：支持


总结:
	可以考虑使用InnoDB来替代MyISAM引擎了,原因是InnoDB自身很多良好的特点,
		比如事务支持、存储 过程、视图、行级锁定等等,在并发很多的情况下,
		相信InnoDB的表现肯定要比MyISAM强很多.另外,任何一种表都不是万能的,
		只用恰当的针对业务类型来选择合适的表类型,才能最大的发挥MySQL的性能优势.
		如果不是很复杂的Web应用,非关键应用,还是可以继续考虑MyISAM的