1、SOA: (面向服务的软件架构、Service Oriented Architecture),是一种软件设计模式.
			主要应用于不同应用组件之间通过某种协议来互操作.
			例如典型的  通信网络协议.因此SOA是独立于任何厂商、产品、技术的,
			因为SOA不依赖于任何技术,因此SOAP、RPC、REST是对SOA的不同实现
			
2、SOAP: 简单对象访问协议是交换数据的一种协议规范,
			是一种轻量的、简单的、基于XML(标准通用标记语言下的一个子集)的协议,
			它被设计成在WEB上交换结构化的和固化的信息
			扩展：
				webService三要素：
					SOAP:用来描述传递信息的格式,
					WSDL(WebServicesDescriptionLanguage):用来描述如何访问具体的接口,
					UDDI(UniversalDescriptionDiscovery andIntegration)之一:用来管理、分发、查询webService 

3、Webservice：效率不高基于soap协议,其主要的特点是跨语言、跨平台的.
				项目中不推荐使用,可用于不同公司间接口的调用.

4、Restful：使用restful形式的服务：http+json.很多项目中应用.
				如果服务太多,服务之间调用关系混乱,需要治疗服务.

5、Dubbo: 使用rpc协议进行远程调用,直接使用socket通信,dobbo是一种RPC框架.
				传输效率高,并且可以统计出系统之间的调用关系、调用次数.
				使用Java语言开发,只能用于Java语言开发的项目间的通信,不具备跨语言,跨平台的特点
				
项目架构演变:
	ORM(单一架构)----->MVC(mvc架构)----->RPC(分布式架构)----->SOA(面向服务架构)----->微服务架构
	ORM常用框架: Hibernate、MyBatis
	MVC常用框架: Struts2、SpringMVC
	RPC常用框架: dubbo、motan、rpcx、gRPC、thrift
	SOA常用框架: 
